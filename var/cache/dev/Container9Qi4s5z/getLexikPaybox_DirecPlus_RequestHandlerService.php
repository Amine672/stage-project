<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'lexik_paybox.direc_plus.request_handler' shared service.

include_once $this->targetDirs[3].'/vendor/lexik/paybox-bundle/Paybox/RequestInterface.php';
include_once $this->targetDirs[3].'/vendor/lexik/paybox-bundle/Paybox/AbstractRequest.php';
include_once $this->targetDirs[3].'/vendor/lexik/paybox-bundle/Paybox/DirectPlus/Request.php';
include_once $this->targetDirs[3].'/vendor/lexik/paybox-bundle/Transport/TransportInterface.php';
include_once $this->targetDirs[3].'/vendor/lexik/paybox-bundle/Transport/AbstractTransport.php';
include_once $this->targetDirs[3].'/vendor/lexik/paybox-bundle/Transport/CurlTransport.php';

return $this->services['lexik_paybox.direc_plus.request_handler'] = new \Lexik\Bundle\PayboxBundle\Paybox\DirectPlus\Request($this->getParameter('lexik_paybox.parameters'), $this->parameters['lexik_paybox.servers'], ($this->privates['monolog.logger.payment'] ?? $this->load('getMonolog_Logger_PaymentService.php')), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), ($this->privates['lexik_paybox.transport'] ?? ($this->privates['lexik_paybox.transport'] = new \Lexik\Bundle\PayboxBundle\Transport\CurlTransport())));
